[
  {
    "name": "ChangeProp",
    "release": "1.0",
    "active": true,
    "description": "",
    "initialize": "/*\r\n  設定を交互に変更するプラグイン\r\n  タイミングタワーの場合、以下の設定のうち、変更したい列を以下に列挙する。\r\n  ※ライブタイミングF4キーで表示される設定に対応している。\r\n    Overlay.TimingTable.Data\r\n    Overlay.TimingTable.Data2\r\n    Overlay.TimingTable.Data3\r\n    Overlay.TimingTable.Data4\r\n    Overlay.TimingTable.Data5\r\n    Overlay.TimingTable.Data6\r\n    Overlay.TimingTable.Data7\r\n    Overlay.TimingTable.Data8\r\n    →上は、列の表示指定で、ドライバー名の右側に表示する列に対応している。\r\n     設定できる値は、'CarLogo', 'Flag', 'Joker', 'Gain', 'Interval', 'Gap', 'TopSpeed',\r\n     'PitCount', 'LastLapTime', 'BestLapTime', 'License', 'LicenseDetail', 'LicenseOnly',\r\n     'LicenseSR', 'IRating', 'CarNumber', 'LastPitLap', 'LastPitTime', 'LastPitLaneTime',\r\n     'OffTrackCount', 'IRatingGain', 'TireCompound', 'P2p', 'None'\r\nのいずれか。\r\n    Overlay.TimingTable.Display\r\n    Overlay.TimingTable.DriversAhead\r\n    Overlay.TimingTable.DriversBehind\r\n    Overlay.TimingTable.DriversDisplayed\r\n    Overlay.TimingTable.GroupedBlockDriversAhead\r\n    Overlay.TimingTable.GroupedBlockDriversBehind\r\n    Overlay.TimingTable.GroupedDefaultBlockSize\r\n    Overlay.TimingTable.GroupedHeaderDisplay\r\n    Overlay.TimingTable.GroupedSelectedBlockSize\r\n    Overlay.TimingTable.NameDisplay\r\n    →'TeamName', 'FullName', 'ShortName', 'ShortName2', 'LastName', 'TeamName',\r\n　　　　 'MulticarTeamName', 'Initials', 'ThreeLetters'のいずれか\r\n    Overlay.TimingTable.Position.Missing\r\n    Overlay.TimingTable.SlideOutLapTime\r\n    →'Show', 'Hide'のいずれか\r\n    Overlay.TimingTable.SlideOutLapTimeDisplayTime\r\n*/\r\n\r\n/* ここから設定変更箇所 */\r\n\r\n// 例えば、interval3秒で、2秒は非表示、1秒は表示にしたい場合、非表示の設定を2つ入れ、表示を1つにすることで実現できます。\r\nthis.timingTable = [\r\n  {\r\n    'Overlay.TimingTable.NameDisplay': 'TeamName',\r\n    'Overlay.TimingTable.Data': 'CarNumber',\r\n    'Overlay.TimingTable.Data1': 'LicenseDetail',\r\n    'Overlay.TimingTable.Data2': 'License',\r\n    'Overlay.TimingTable.Data3': 'Interval',\r\n    'Overlay.TimingTable.Data4': 'TopSpeed',\r\n    'Overlay.TimingTable.Data5': 'BestLapTime',\r\n    'Overlay.TimingTable.Data6': 'LastLapTime',\r\n    'Overlay.TimingTable.Data7': 'None',\r\n    'Overlay.TimingTable.Data8': 'None'\r\n  },\r\n  {\r\n    'Overlay.TimingTable.NameDisplay': 'TeamName',\r\n    'Overlay.TimingTable.Data': 'CarNumber',\r\n    'Overlay.TimingTable.Data1': 'LicenseDetail',\r\n    'Overlay.TimingTable.Data2': 'License',\r\n    'Overlay.TimingTable.Data3': 'Interval',\r\n    'Overlay.TimingTable.Data4': 'LastPitLap',\r\n    'Overlay.TimingTable.Data5': 'LastPitTime',\r\n    'Overlay.TimingTable.Data6': 'LastPitLaneTime',\r\n    'Overlay.TimingTable.Data7': 'None',\r\n    'Overlay.TimingTable.Data8': 'None'\r\n  },\r\n  {\r\n    'Overlay.TimingTable.NameDisplay': 'FullName',\r\n    'Overlay.TimingTable.Data': 'CarLogo',\r\n    'Overlay.TimingTable.Data1': 'LicenseDetail',\r\n    'Overlay.TimingTable.Data2': 'Flag',\r\n    'Overlay.TimingTable.Data3': 'CarNumber',\r\n    'Overlay.TimingTable.Data4': 'License',\r\n    'Overlay.TimingTable.Data5': 'Interval',\r\n    'Overlay.TimingTable.Data6': 'None',\r\n    'Overlay.TimingTable.Data7': 'None',\r\n    'Overlay.TimingTable.Data8': 'None'\r\n  },\r\n]\r\n\r\n/* 何ミリ秒おきに切り替えるか。1000＝1秒 */\r\nconst interval = 20000;\r\n\r\n/* ここまで設定変更箇所 */\r\n\r\nthis.debug = false;\r\nthis.displayIndex = 0;\r\nthis.current = -1;\r\n\r\nlet maxDisplayIndex = this.timingTable.length-1;\r\n\r\nthis.timer = setInterval(() => {\r\n  this.displayIndex = this.displayIndex >= maxDisplayIndex ? 0 : this.displayIndex + 1;\r\n  this.debug && console.debug(`this.displayIndex: ${this.displayIndex}`);\r\n}, interval)",
    "dispose": "console.log('Diposing timer');\r\n \r\nclearInterval(this.timer);\r\n \r\nconsole.log('Timer disposed');",
    "flush": "",
    "update": "const instance = calculatedData.instance;\r\n\r\n//console.debug(rawData);\r\n\r\nif (this.current !== this.displayIndex) {\r\n  console.debug(1, rawData);\r\n  // SDKの設定をブラウザの開発コンソールで確認したい場合は、以下行の先頭をコメントアウト（//）します。\r\n  Object.assign(rawData, this.timingTable[this.displayIndex]);\r\n  this.current = this.displayIndex;\r\n  //console.debug(2, rawData);\r\n}"
  }
]